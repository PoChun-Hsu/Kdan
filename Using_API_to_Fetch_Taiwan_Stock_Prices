from google.cloud import bigquery
from google.oauth2 import service_account
import pandas as pd
import requests
import json
from datetime import datetime, timedelta
import pyarrow

# 創建 BigQuery 客戶端
credentials = service_account.Credentials.from_service_account_file('C:\\Users\\paul_p_hsu\\Desktop\\starry-center-405211-172bb674d815.json')  # 替換為您的服務賬戶文件路徑
client = bigquery.Client(credentials=credentials, project=credentials.project_id)

def fetch_stock_data(date, stock_no):
    try:
        # 根據指定日期和股票號碼抓取股價數據
        url = f'https://www.twse.com.tw/exchangeReport/STOCK_DAY?response=json&date={date}&stockNo={stock_no}'
        response = requests.get(url)
        response.raise_for_status()
        return response.json()

    except requests.HTTPError as http_err:
        if http_err.response.status_code in [429, 504]:
            print(f"遇到錯誤碼 {http_err.response.status_code}，將在 60 秒後重試...")
            time.sleep(60)
            return fetch_stock_data(date, stock_no)  # 遞迴調用以重試
        else:
            print(f"HTTP 錯誤發生：{http_err}")
            return None
    except requests.ConnectionError as conn_err:
        print(f"連接錯誤：{conn_err}")
        return None
    except Exception as err:
        print(f"其他錯誤發生：{err}")
        return None

def convert_to_int(value):
    try:
        return int(value.replace(',', ''))
    except ValueError:
        return None
    
def convert_to_float(value):
    try:
        return float(value.replace(',', ''))
    except ValueError:
        return None

def fetch_and_save_stock_data(start_date, end_date, stock_no):
    try:
        # 驗證並解析日期
        start_datetime = datetime.strptime(start_date, "%Y%m%d")
        end_datetime = datetime.strptime(end_date, "%Y%m%d")
        current_datetime = datetime.now()

        if start_datetime > end_datetime:
            print("起始日期應小於結束日期。")
            return
        if start_datetime > current_datetime:
            print("起始日期應小於當前日期。")
            return

        if end_datetime > current_datetime:
            end_datetime = current_datetime
            print(f"結束日期超出範圍，已調整為最新日期：{current_datetime.strftime('%Y%m%d')}")

        combined_df = pd.DataFrame()
        while start_datetime <= end_datetime:
            date_str = start_datetime.strftime("%Y%m01")
            content = fetch_stock_data(date_str, stock_no)
            if content is None:
                continue

            stock_data = content['data']
            col_name = content['fields']

            df = pd.DataFrame(stock_data, columns=col_name)
            
            # 轉換欄位名稱
            col_name_mapping = {
                "日期": "Date",
                "成交股數": "Number_of_Shares_Traded",
                "成交金額": "Total_Trade_Value",
                "開盤價": "Opening_Price",
                "最高價": "Highest_Price",
                "最低價": "Lowest_Price",
                "收盤價": "Closing_Price",
                "漲跌價差": "Price_Difference",
                "成交筆數": "Number_of_Transactions"
            }
            df.rename(columns=col_name_mapping, inplace=True)

            # 整數轉換
            for col in ['Number_of_Shares_Traded', 'Total_Trade_Value', 'Number_of_Transactions']:
                df[col] = df[col].apply(convert_to_int)

            # 浮點數轉換
            for col in ['Opening_Price', 'Highest_Price', 'Lowest_Price', 'Closing_Price', 'Price_Difference']:
                df[col] = df[col].apply(convert_to_float)

            combined_df = pd.concat([combined_df, df])

            start_datetime += timedelta(days=32)
            start_datetime = start_datetime.replace(day=1)

        # 將數據寫入 BigQuery
        table_id = 'starry-center-405211.Kdan.Log_Taiwan_Stock'  # 替換為您的 BigQuery 表格 ID
        job = client.load_table_from_dataframe(combined_df, table_id)
        job.result()  # 等待數據加載完成

        print(f"數據已儲存至 BigQuery 表格：{table_id}")

    except json.JSONDecodeError as json_err:
        print(f"JSON 解析錯誤：{json_err}")
    except Exception as err:
        print(f"其他錯誤發生：{err}")


def fetch_and_save_multiple_stocks(start_date, end_date, stock_nos):
    for stock_no in stock_nos:
        fetch_and_save_stock_data(start_date, end_date, stock_no)

# 使用範例
start_date = '20231001'
end_date = '20231130'
stock_nos = ['2330', '0050']  # 您可以在這裡添加更多股票代碼

fetch_and_save_multiple_stocks(start_date, end_date, stock_nos)
